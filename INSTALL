STEPS TO INSTALL PHPREPORT
--------------------------

0. Requirements

You will need the following software in your system:
   * Web server (tested with apache2)
   * Postgres database server (in theory, any version)
   * PHP 5.3.0 or higher supported by the web server

1. Setting up the database

Connect to your database server as superuser, or a user with enough
permissions to create databases and users. Run the following commands
to create a database, a user and grant enough permissions (change the
names and passwords if you feel like to, but remember it in the next steps):

CREATE DATABASE phpreport;
CREATE USER phpreport WITH PASSWORD 'phpreport';
ALTER DATABASE phpreport OWNER TO phpreport;

From the shell, use the utility createlang to define the language for the triggers
(set the correct DB name, user and host if you have changed them):

createlang -h localhost -W -U phpreport plpgsql phpreport

2. Setting up the files

Move the program files to a location available for
the web server (usually it would be /var/www/phpreport). If you changed any
data on the previous step, edit the file config/config.php and set the correct
values for the DB name, user, password, host, etc.

You will also have to download the ExtJS library, version 3.0.3 (www.sencha.com/products/js)
and extract it to the directory web/ext/. Please note you need exactly that version,
not an older nor a newer one. You can get the library in the following URL:
http://www.sencha.com/products/js/download.php?dl=extjs303

3. Setting up PHP

PhpReport needs you to add a new value to the PHP variable include_path. Assuming
you have installed PhpReport in /var/www/phpreport, the value of include_path should
be ".:/var/www". There are different ways to do that:
   * If you have enough permissions, you can modify the main PHP configuration
file (usually in /etc/php5/apache2/php.ini).
   * Maybe you can configure it in your web server configuration: in apache2,
you could do it in a .htaccess file or in a VirtualHost, using:
     php_value include_path ".:/var/www"

4. Creating the schema and initial data of the database

Browse to the directory sql/ and run the following commands (you will be asked
by the password (phpreport) interactively):

psql -h localhost -W -U phpreport phpreport < schema.sql
psql -h localhost -W -U phpreport phpreport < uniqueConstraints.sql
psql -h localhost -W -U phpreport phpreport < otherConstraints.sql
psql -h localhost -W -U phpreport phpreport < initialData.sql
psql -h localhost -W -U phpreport phpreport < triggers.sql

Set the correct DB name, user and host if they are different.

5. Try the application

Use a browser to open the correct URL of your web server, and use the user name 'admin'
and the password 'admin' for the first time. You will be able to create more users and
change their passwords once you enter the application.
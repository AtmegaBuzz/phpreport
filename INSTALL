Installation instructions
#########################

.. contents::

Step 0: Dependencies
====================

To install PhpReport in your system, you will need the following software:

* PostgreSQL database server (tested with PostgreSQL 9)

* PHP 5.3.0 or higher

  * Support for PostgreSQL

* Web server (tested with Apache 2.2)

  * PHP module

Installing dependencies in Windows systems
------------------------------------------

You will have to download and install the software by yourself. Check each
program documentation for detailed instructions.

You can find Windows versions of the software in the following sites:

* PostgreSQL at http://www.postgresql.org/download/windows

* Apache 2.2 at http://www.apachelounge.com/download/. This is the recommended
  version you should install to use PHP 5.3. Follow instructions in ReadMe file.

* PHP 5.3 at http://windows.php.net/download/. Installation instructions are
  available here: http://www.sitepoint.com/how-to-install-php-on-windows.

Installing dependencies in Debian/Ubuntu systems
------------------------------------------------

Run the following command with root permission::

  apt-get install postgresql apache2 php5 php5-pgsql

Installing dependencies in Red Hat/Fedora systems
-------------------------------------------------

Run the following command with root permission::

  yum install postgresql-server httpd php php-pgsql php-xml

Step 1: Setting up the database
===============================

Connect to your database server as superuser, or a user with enough
permissions to create databases and users.

* On Windows: go to *Start Menu -> Programs -> PostgreSQL -> SQL Shell*, connect
  as the user ``postgres``.
* On GNU/Linux systems: run the following command with root permissions::

    su postgres -c psql

Once you have logged into PostgreSQL shell, run the following commands
to create a database, a user and grant enough permissions (change the
names and passwords if you feel like to, but remember it in the next steps)::

  CREATE DATABASE phpreport;
  CREATE USER phpreport WITH PASSWORD 'phpreport';
  ALTER DATABASE phpreport OWNER TO phpreport;

Step 2: Setting up the files
============================

Just move the program files to a location available for the web server, inside
a directory called phpreport. Usual default locations for web servers are:

* On Windows: ``C:\Apache2\htdocs\``
* On Debian, Ubuntu: ``/var/www/``
* On Red Hat, Fedora: ``/var/www/html/``

Step 3: Creating the schema and initial data of the database
============================================================

You have two ways to do it: using the included
`web installation wizard <#installation-wizard>`__ or
`manually <#manual-setup-of-schema-and-initial-data>`__.

Installation wizard
-------------------

As a precondition, your web server has to have write permissions on the config
directory of PhpReport to write the configuration file. Once that is done, open
the url ``http://your-web-server/phpreport/install/index.php``, and follow the
on-screen
instructions. If you didn't change the names and passwords specified on step 1,
defaults will just work fine.

Manual setup of schema and initial data
---------------------------------------

Follow these steps only if you haven't used the installation wizard. In first
place, browse to the ``phpreport`` directory and
create a configuration file with the default options with the command::

  cp config/config.defaults config/config.php

If you changed any of data on the first step, edit the file ``config/config.php``
and set the correct values for the DB name, user, password, host, etc.

Browse to the directory ``sql/`` and run the following commands (you will be
asked by the password interactively, default is ``phpreport``)::

  psql -h localhost -W -U phpreport phpreport < schema.sql
  psql -h localhost -W -U phpreport phpreport < uniqueConstraints.sql
  psql -h localhost -W -U phpreport phpreport < otherConstraints.sql
  psql -h localhost -W -U phpreport phpreport < initialData.sql
  psql -h localhost -W -U phpreport phpreport < update/all.sql

Set the correct DB name, user and host if they are different.

Step 4: Try the application
===========================

Use a browser to open the correct URL of your web server, and use the user name
``admin`` and the password ``admin`` for the first time. You will be able to
create more users and
change their passwords once you enter the application.

Step 5: remove dangerous files
==============================

Once the installation is complete and you have checked it is working, remove the
``install/`` and ``update/`` directories inside your PhpReport, to prevent other
users from resetting your DB.

Step 6: last configuration bits
===============================

You might have to modify some parameters in the file `config/config.php` to
match your work domain. In particular, you might have to modify the default
total number of holiday hours for a full-time worker. It is specified by the
`YEARLY_HOLIDAY_HOURS` attribute, and you have to modify the following line to
change it::

   * @name YEARLY_HOLIDAY_HOURS
   * @global int holiday hours per year for an 8-hour working journey
   */
  define ('YEARLY_HOLIDAY_HOURS', 184);

Remember to check the `data model for holiday management
<../user/overview.html#data-model-for-holiday-management>`__ to know how it
works and which value you should put there.

Common problems
===============

PostgreSQL service is running but installation wizard seems to be unable to connect to it
-----------------------------------------------------------------------------------------

Probably your PostgreSQL server isn't allowing incoming connections through the
network. Check the file ``pg_hba.conf`` (location in Fedora:
``/var/lib/pgsql/data/``, Debian/Ubuntu: ``/etc/postgresql/<version>/main/``).
You will probably need to add the following lines::

  # TYPE  DATABASE        USER            CIDR-ADDRESS            METHOD
  # IPv4 local connections:
  host    all             all             127.0.0.1/32            md5
  # IPv6 local connections:
  host    all             all             ::1/128                 md5

I can't start PostgreSQL server service in Fedora
-------------------------------------------------

Maybe you haven't set the storage files up. Type (as root)::

  service postgresql initdb

There's an error message: 'It is not safe to rely on the system's timezone settings'
------------------------------------------------------------------------------------

Edit the configuration file ``php.ini``, adding a line like the following one but
changing ``Europe/Madrid`` with your own time zone::

  date.timezone = Europe/Madrid

php.ini is usually located in:

* Debian, Ubuntu: ``/etc/php5/apache2/php.ini``
* Fedora, Red Hat: ``/etc/php.ini``
* Windows: ``C:\PHP\php.ini``

There are a lot of warning and error messages mixed with the content of the web application
-------------------------------------------------------------------------------------------

Disable error output in PHP settings. Edit the configuration file php.ini and
locate the parameter ``display_errors``, changing its value to ``off``::

  display_errors = Off
